{"version":3,"sources":["components/Notification.js","services/numbers.js","App.js","index.js"],"names":["Notification","success","message","numberURL","axios","get","then","numbers","data","newEntry","post","response","id","delete","r","console","log","put","App","useState","setNumbers","newName","setName","newNumber","setNumber","searchQuery","setSearchQuery","notificationProps","setNotificationProps","useEffect","numbersService","catch","error","enableNotification","duration","setTimeout","stateHandler","event","stateChangeFunction","target","value","numbersToDisplay","filter","number","name","toLowerCase","includes","onChange","onClick","Date","toISOString","exist","find","n","window","confirm","res","alert","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c84fa88e.chunk.js","sourcesContent":["const Notification = ({success, message}) => {\r\n\r\n    if(!message) return null;\r\n\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default Notification;","import axios from 'axios';\r\nconst numberURL = \"/api/persons\"\r\n\r\nconst getNumbers = () => {\r\n    const response = axios.get(numberURL);\r\n    return response\r\n        .then(numbers => numbers.data)\r\n}\r\n\r\nconst addNumber = (newEntry) => {\r\n    const request = axios.post(numberURL, newEntry)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst editNumber = (id, newEntry) => {\r\n    const request = axios.put(`${numberURL}/${id}`, newEntry)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteNumber = (id) => {\r\n    const response = axios.delete(numberURL + `/${id}`);\r\n    return response.then(r => console.log(r));\r\n}\r\n\r\nexport default { getNumbers, addNumber, deleteNumber, editNumber};","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Notification from './components/Notification'\r\nimport numbersService from './services/numbers'\r\n\r\nfunction App() {\r\n    const [numbers, setNumbers] = useState([])\r\n    const [newName, setName] = useState('');\r\n    const [newNumber, setNumber] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    //Notification states\r\n    const [notificationProps, setNotificationProps] = useState({message: null, success: false});\r\n\r\n    useEffect(()=>{\r\n        numbersService\r\n            .getNumbers()\r\n            .then((numbers)=> {\r\n                setNumbers(numbers);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Unable to get numbers from DB \", error);\r\n            })\r\n        }\r\n    ,[]);\r\n\r\n    //Receives a message to display and if whether to use the successful css styling or not to the notification\r\n    const enableNotification = (message, success, duration) => {\r\n        const newNotification = {message,success}\r\n        setNotificationProps(newNotification) \r\n            setTimeout(()=> {\r\n                setNotificationProps({message: null, success: false});\r\n            }, duration)\r\n    }\r\n\r\n    const addEntry = () => {\r\n        const newEntry = {\r\n            \"name\": newName,\r\n            \"number\": newNumber,\r\n            \"date\": new Date().toISOString\r\n        }\r\n\r\n        const exist = numbers.find(n => n.name.toLowerCase() === newName.toLowerCase());\r\n        if(exist){\r\n            if (window.confirm('Entry already exists, would you edit?')){\r\n                numbersService.editNumber(exist.id, newEntry).then((res) => {\r\n                    alert(\"Successfully edited the entry\");\r\n                }).catch((error) => {\r\n                    alert(\"Unable to edit the entry\", error);\r\n                })\r\n            } \r\n           \r\n        }\r\n        else{\r\n            numbersService.addNumber(newEntry).then((res) => {\r\n                enableNotification(\"Successfully added a new entry\", true, 3000);\r\n            }).catch((error) => {\r\n                alert(\"Unable to add new entry\", error);\r\n            })\r\n        }       \r\n    }\r\n\r\n    const deleteEntry = (id) => {\r\n        numbersService.deleteNumber(id).then(() => {\r\n            enableNotification(\"Successfully deleted an entry\", true, 3000);\r\n        }).catch((error)=> {\r\n            enableNotification(\"Cannot delete non existing entry\", false, 3000);\r\n        });\r\n    }\r\n\r\n    const stateHandler = (event, stateChangeFunction) => {\r\n        stateChangeFunction(event.target.value);\r\n    }\r\n\r\n\r\n    const numbersToDisplay = (searchQuery)? \r\n        numbers.filter((number) => number.name.toLowerCase().includes(searchQuery.toLowerCase())) : \r\n        numbers;\r\n\r\n    return (\r\n        <div>\r\n            <Notification {...notificationProps}/>\r\n            <h2>Phonebook</h2>\r\n                <input value={searchQuery} onChange={(event) => stateHandler(event, setSearchQuery)}></input>\r\n            <h4>Add new</h4>    \r\n                <div>\r\n                    Name <input value={newName} onChange={(event) => stateHandler(event, setName)}/>\r\n                </div>\r\n                <div>\r\n                    Number <input value={newNumber} onChange={(event) => stateHandler(event, setNumber)}/>\r\n                </div>\r\n                <button onClick={addEntry}>Add</button>\r\n            <h4>Numbers</h4>\r\n                <ul>\r\n                    {numbersToDisplay.map(n => \r\n                            <li id={n.id}>{`${n.name} - ${n.number}`} <button onClick={()=> deleteEntry(n.id)}>DELETE</button></li> \r\n                        )\r\n                    }\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}